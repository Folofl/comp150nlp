Assignment: Lab3
By:         Alena Borisenko 
Created:    October 3rd, 2017
Submitted:  October 4th, 2017
===============================================================================

    (1) S  -> NP VP
    (2) S  -> NP VP PP
    (3) NP -> det n
    (4) NP -> n
    (5) NP -> NP PP
    (6) VP -> aux VP
    (7) VP -> v NP
    (8) PP -> p NP

-------------------------------------------------------------------------------
Part 1: Modify grammar into CNF
-------------------------------------------------------------------------------

    (1) ok
    (2) needs to be separated:
        S  -> XS PP
        XS -> NP VP

    (3) needs dummy non-terminals:
        NP -> XD XN
        XD -> det
        XN -> n

    (4) ok
    (5) ok

    (6) needs dummy non-terminal:
        VP -> XA VP
        XA -> aux

    (7) needs dummy non-terminal:
        VP -> XV NP
        XV -> v

    (8) needs dummy non-terminal:
        PP -> XP NP
        XP -> p


    Combined:
        ( 1)  S  -> NP VP
        ( 2)  S  -> XS PP
        ( 3)  XS -> NP VP
        ( 4)  NP -> XD XN
        ( 5)  XD -> det
        ( 6)  XN -> n
        ( 7)  NP -> n
        ( 8)  NP -> NP PP
        ( 9)  VP -> XA VP
        (10)  XA -> aux
        (11)  VP -> XV NP
        (12)  XV -> v
        (13)  PP -> XP NP
        (14)  XP -> p

-------------------------------------------------------------------------------
Part 2: CYK parsing table
-------------------------------------------------------------------------------
    
    

-------------------------------------------------------------------------------
Part 3: Possible parse trees
-------------------------------------------------------------------------------
    
    Two possible parses:

    (S (NP (XD det) (XN n)) (VP (XA aux) (VP (XV v) (NP (NP n) (PP (XP p) (NP (XD det) (XN n)))))))

    (S (XS (NP (XD det) (XN n)) (VP (XA aux) (VP (XV v) (NP n)))) (PP (XP p) (NP (XD det) (XN n))))

    This is indicated by the two successful S sentence parses in the last cell
    as well as the lack of duplicate ways to generate other sub-components of
    each sentence (down the tree everything has only one way of resolving)

-------------------------------------------------------------------------------
Part 4: Parse of the original grammar
-------------------------------------------------------------------------------

    Using the following parse as a base:
    (S (NP (XD det) (XN n)) (VP (XA aux) (VP (XV v) (NP (NP n) (PP (XP p) (NP (XD det) (XN n)))))))

    Original grammar would look like:
    (S (NP det n) (VP aux (VP v (NP (NP n) (PP p (NP det n))))))

-------------------------------------------------------------------------------
Part 5: Sentences from new lexicon
-------------------------------------------------------------------------------
    
    Rule modifications:
        ( 5)  XD ->   the 
                    | this
                    | that

        ( 6)  XN ->   dog
                    | cat
                    | penguin
                    | girl
                    | boy

        ( 7)  NP ->   dog
                    | cat
                    | penguin
                    | girl
                    | boy

        (10)  XA ->   is
                    | can
                    | has

        (12)  XV ->   bite
                    | 
        (14)  XP -> p


       det       n      aux      v       n       p      det      n
    +-------+--------+-------+-------+-------+-------+-------+-------+
     \      /\      /\      /\      /\      /\      /\      /\      /
      \    /  \    /  \    /  \    /  \    /  \    /  \    /  \    /
       \  /    \  /    \  /    \  /    \  /    \  /    \  /    \  /
        \/      \/      \/      \/      \/      \/      \/      \/ 
         \      /\      /\      /\      /\      /\      /\      /
          \    /  \    /  \    /  \    /  \    /  \    /  \    / 
           \  /    \  /    \  /    \  /    \  /    \  /    \  / 
            \/      \/      \/      \/      \/      \/      \/ 
             \      /\      /\      /\      /\      /\      /
              \    /  \    /  \    /  \    /  \    /  \    /  
               \  /    \  /    \  /    \  /    \  /    \  /  
                \/      \/      \/      \/      \/      \/
                 \      /\      /\      /\      /\      /
                  \    /  \    /  \    /  \    /  \    / 
                   \  /    \  /    \  /    \  /    \  / 
                    \/      \/      \/      \/      \/  
                     \      /\      /\      /\      /
                      \    /  \    /  \    /  \    /  
                       \  /    \  /    \  /    \  /  
                        \/      \/      \/      \/  
                         \      /\      /\      /
                          \    /  \    /  \    /   
                           \  /    \  /    \  /   
                            \/      \/      \/
                             \      /\      /
                              \    /  \    /  
                               \  /    \  /  
                                \/      \/  
                                 \      /
                                  \    /   
                                   \  /   
                                    \/               


  
